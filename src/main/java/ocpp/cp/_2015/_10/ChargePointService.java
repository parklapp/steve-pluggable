package ocpp.cp._2015._10;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.AsyncHandler;
import jakarta.xml.ws.Response;
import java.util.concurrent.Future;

/**
 * This class was generated by Apache CXF 4.0.5
 * 2024-09-28T11:14:45.644+02:00
 * Generated source version: 4.0.5
 *
 */
@WebService(targetNamespace = "urn://Ocpp/Cp/2015/10/", name = "ChargePointService")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface ChargePointService {

    @WebMethod(operationName = "ChangeAvailability")
    public Response<ocpp.cp._2015._10.ChangeAvailabilityResponse> changeAvailabilityAsync(

        @WebParam(partName = "parameters", name = "changeAvailabilityRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ChangeAvailabilityRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ChangeAvailability")
    public Future<?> changeAvailabilityAsync(

        @WebParam(partName = "parameters", name = "changeAvailabilityRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ChangeAvailabilityRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.ChangeAvailabilityResponse> asyncHandler
    );

    @WebMethod(operationName = "ChangeAvailability", action = "/ChangeAvailability")
    @Action(input = "/ChangeAvailability", output = "/ChangeAvailabilityResponse")
    @WebResult(name = "changeAvailabilityResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public ChangeAvailabilityResponse changeAvailability(

        @WebParam(partName = "parameters", name = "changeAvailabilityRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ChangeAvailabilityRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetDiagnostics")
    public Response<ocpp.cp._2015._10.GetDiagnosticsResponse> getDiagnosticsAsync(

        @WebParam(partName = "parameters", name = "getDiagnosticsRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetDiagnosticsRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetDiagnostics")
    public Future<?> getDiagnosticsAsync(

        @WebParam(partName = "parameters", name = "getDiagnosticsRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetDiagnosticsRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.GetDiagnosticsResponse> asyncHandler
    );

    @WebMethod(operationName = "GetDiagnostics", action = "/GetDiagnostics")
    @Action(input = "/GetDiagnostics", output = "/GetDiagnosticsResponse")
    @WebResult(name = "getDiagnosticsResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public GetDiagnosticsResponse getDiagnostics(

        @WebParam(partName = "parameters", name = "getDiagnosticsRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetDiagnosticsRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "UpdateFirmware")
    public Response<ocpp.cp._2015._10.UpdateFirmwareResponse> updateFirmwareAsync(

        @WebParam(partName = "parameters", name = "updateFirmwareRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        UpdateFirmwareRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "UpdateFirmware")
    public Future<?> updateFirmwareAsync(

        @WebParam(partName = "parameters", name = "updateFirmwareRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        UpdateFirmwareRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.UpdateFirmwareResponse> asyncHandler
    );

    @WebMethod(operationName = "UpdateFirmware", action = "/UpdateFirmware")
    @Action(input = "/UpdateFirmware", output = "/UpdateFirmwareResponse")
    @WebResult(name = "updateFirmwareResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public UpdateFirmwareResponse updateFirmware(

        @WebParam(partName = "parameters", name = "updateFirmwareRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        UpdateFirmwareRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetLocalListVersion")
    public Response<ocpp.cp._2015._10.GetLocalListVersionResponse> getLocalListVersionAsync(

        @WebParam(partName = "parameters", name = "getLocalListVersionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetLocalListVersionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetLocalListVersion")
    public Future<?> getLocalListVersionAsync(

        @WebParam(partName = "parameters", name = "getLocalListVersionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetLocalListVersionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.GetLocalListVersionResponse> asyncHandler
    );

    @WebMethod(operationName = "GetLocalListVersion", action = "/GetLocalListVersion")
    @Action(input = "/GetLocalListVersion", output = "/GetLocalListVersionResponse")
    @WebResult(name = "getLocalListVersionResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public GetLocalListVersionResponse getLocalListVersion(

        @WebParam(partName = "parameters", name = "getLocalListVersionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetLocalListVersionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "RemoteStopTransaction")
    public Response<ocpp.cp._2015._10.RemoteStopTransactionResponse> remoteStopTransactionAsync(

        @WebParam(partName = "parameters", name = "remoteStopTransactionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        RemoteStopTransactionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "RemoteStopTransaction")
    public Future<?> remoteStopTransactionAsync(

        @WebParam(partName = "parameters", name = "remoteStopTransactionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        RemoteStopTransactionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.RemoteStopTransactionResponse> asyncHandler
    );

    @WebMethod(operationName = "RemoteStopTransaction", action = "/RemoteStopTransaction")
    @Action(input = "/RemoteStopTransaction", output = "/RemoteStopTransactionResponse")
    @WebResult(name = "remoteStopTransactionResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public RemoteStopTransactionResponse remoteStopTransaction(

        @WebParam(partName = "parameters", name = "remoteStopTransactionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        RemoteStopTransactionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "SetChargingProfile")
    public Response<ocpp.cp._2015._10.SetChargingProfileResponse> setChargingProfileAsync(

        @WebParam(partName = "parameters", name = "setChargingProfileRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        SetChargingProfileRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "SetChargingProfile")
    public Future<?> setChargingProfileAsync(

        @WebParam(partName = "parameters", name = "setChargingProfileRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        SetChargingProfileRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.SetChargingProfileResponse> asyncHandler
    );

    @WebMethod(operationName = "SetChargingProfile", action = "/SetChargingProfile")
    @Action(input = "/SetChargingProfile", output = "/SetChargingProfileResponse")
    @WebResult(name = "setChargingProfileResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public SetChargingProfileResponse setChargingProfile(

        @WebParam(partName = "parameters", name = "setChargingProfileRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        SetChargingProfileRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "UnlockConnector")
    public Response<ocpp.cp._2015._10.UnlockConnectorResponse> unlockConnectorAsync(

        @WebParam(partName = "parameters", name = "unlockConnectorRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        UnlockConnectorRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "UnlockConnector")
    public Future<?> unlockConnectorAsync(

        @WebParam(partName = "parameters", name = "unlockConnectorRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        UnlockConnectorRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.UnlockConnectorResponse> asyncHandler
    );

    @WebMethod(operationName = "UnlockConnector", action = "/UnlockConnector")
    @Action(input = "/UnlockConnector", output = "/UnlockConnectorResponse")
    @WebResult(name = "unlockConnectorResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public UnlockConnectorResponse unlockConnector(

        @WebParam(partName = "parameters", name = "unlockConnectorRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        UnlockConnectorRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ClearChargingProfile")
    public Response<ocpp.cp._2015._10.ClearChargingProfileResponse> clearChargingProfileAsync(

        @WebParam(partName = "parameters", name = "clearChargingProfileRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ClearChargingProfileRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ClearChargingProfile")
    public Future<?> clearChargingProfileAsync(

        @WebParam(partName = "parameters", name = "clearChargingProfileRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ClearChargingProfileRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.ClearChargingProfileResponse> asyncHandler
    );

    @WebMethod(operationName = "ClearChargingProfile", action = "/ClearChargingProfile")
    @Action(input = "/ClearChargingProfile", output = "/ClearChargingProfileResponse")
    @WebResult(name = "clearChargingProfileResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public ClearChargingProfileResponse clearChargingProfile(

        @WebParam(partName = "parameters", name = "clearChargingProfileRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ClearChargingProfileRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ClearCache")
    public Response<ocpp.cp._2015._10.ClearCacheResponse> clearCacheAsync(

        @WebParam(partName = "parameters", name = "clearCacheRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ClearCacheRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ClearCache")
    public Future<?> clearCacheAsync(

        @WebParam(partName = "parameters", name = "clearCacheRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ClearCacheRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.ClearCacheResponse> asyncHandler
    );

    @WebMethod(operationName = "ClearCache", action = "/ClearCache")
    @Action(input = "/ClearCache", output = "/ClearCacheResponse")
    @WebResult(name = "clearCacheResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public ClearCacheResponse clearCache(

        @WebParam(partName = "parameters", name = "clearCacheRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ClearCacheRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ChangeConfiguration")
    public Response<ocpp.cp._2015._10.ChangeConfigurationResponse> changeConfigurationAsync(

        @WebParam(partName = "parameters", name = "changeConfigurationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ChangeConfigurationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ChangeConfiguration")
    public Future<?> changeConfigurationAsync(

        @WebParam(partName = "parameters", name = "changeConfigurationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ChangeConfigurationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.ChangeConfigurationResponse> asyncHandler
    );

    @WebMethod(operationName = "ChangeConfiguration", action = "/ChangeConfiguration")
    @Action(input = "/ChangeConfiguration", output = "/ChangeConfigurationResponse")
    @WebResult(name = "changeConfigurationResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public ChangeConfigurationResponse changeConfiguration(

        @WebParam(partName = "parameters", name = "changeConfigurationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ChangeConfigurationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ReserveNow")
    public Response<ocpp.cp._2015._10.ReserveNowResponse> reserveNowAsync(

        @WebParam(partName = "parameters", name = "reserveNowRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ReserveNowRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "ReserveNow")
    public Future<?> reserveNowAsync(

        @WebParam(partName = "parameters", name = "reserveNowRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ReserveNowRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.ReserveNowResponse> asyncHandler
    );

    @WebMethod(operationName = "ReserveNow", action = "/ReserveNow")
    @Action(input = "/ReserveNow", output = "/ReserveNowResponse")
    @WebResult(name = "reserveNowResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public ReserveNowResponse reserveNow(

        @WebParam(partName = "parameters", name = "reserveNowRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ReserveNowRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "Reset")
    public Response<ocpp.cp._2015._10.ResetResponse> resetAsync(

        @WebParam(partName = "parameters", name = "resetRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ResetRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "Reset")
    public Future<?> resetAsync(

        @WebParam(partName = "parameters", name = "resetRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ResetRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.ResetResponse> asyncHandler
    );

    @WebMethod(operationName = "Reset", action = "/Reset")
    @Action(input = "/Reset", output = "/ResetResponse")
    @WebResult(name = "resetResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public ResetResponse reset(

        @WebParam(partName = "parameters", name = "resetRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        ResetRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "SendLocalList")
    public Response<ocpp.cp._2015._10.SendLocalListResponse> sendLocalListAsync(

        @WebParam(partName = "parameters", name = "sendLocalListRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        SendLocalListRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "SendLocalList")
    public Future<?> sendLocalListAsync(

        @WebParam(partName = "parameters", name = "sendLocalListRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        SendLocalListRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.SendLocalListResponse> asyncHandler
    );

    @WebMethod(operationName = "SendLocalList", action = "/SendLocalList")
    @Action(input = "/SendLocalList", output = "/SendLocalListResponse")
    @WebResult(name = "sendLocalListResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public SendLocalListResponse sendLocalList(

        @WebParam(partName = "parameters", name = "sendLocalListRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        SendLocalListRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetCompositeSchedule")
    public Response<ocpp.cp._2015._10.GetCompositeScheduleResponse> getCompositeScheduleAsync(

        @WebParam(partName = "parameters", name = "getCompositeScheduleRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetCompositeScheduleRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetCompositeSchedule")
    public Future<?> getCompositeScheduleAsync(

        @WebParam(partName = "parameters", name = "getCompositeScheduleRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetCompositeScheduleRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.GetCompositeScheduleResponse> asyncHandler
    );

    @WebMethod(operationName = "GetCompositeSchedule", action = "/GetCompositeSchedule")
    @Action(input = "/GetCompositeSchedule", output = "/GetCompositeScheduleResponse")
    @WebResult(name = "getCompositeScheduleResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public GetCompositeScheduleResponse getCompositeSchedule(

        @WebParam(partName = "parameters", name = "getCompositeScheduleRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetCompositeScheduleRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "TriggerMessage")
    public Response<ocpp.cp._2015._10.TriggerMessageResponse> triggerMessageAsync(

        @WebParam(partName = "parameters", name = "triggerMessageRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        TriggerMessageRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "TriggerMessage")
    public Future<?> triggerMessageAsync(

        @WebParam(partName = "parameters", name = "triggerMessageRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        TriggerMessageRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.TriggerMessageResponse> asyncHandler
    );

    @WebMethod(operationName = "TriggerMessage", action = "/TriggerMessage")
    @Action(input = "/TriggerMessage", output = "/TriggerMessageResponse")
    @WebResult(name = "triggerMessageResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public TriggerMessageResponse triggerMessage(

        @WebParam(partName = "parameters", name = "triggerMessageRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        TriggerMessageRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "CancelReservation")
    public Response<ocpp.cp._2015._10.CancelReservationResponse> cancelReservationAsync(

        @WebParam(partName = "parameters", name = "cancelReservationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        CancelReservationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "CancelReservation")
    public Future<?> cancelReservationAsync(

        @WebParam(partName = "parameters", name = "cancelReservationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        CancelReservationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.CancelReservationResponse> asyncHandler
    );

    @WebMethod(operationName = "CancelReservation", action = "/CancelReservation")
    @Action(input = "/CancelReservation", output = "/CancelReservationResponse")
    @WebResult(name = "cancelReservationResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public CancelReservationResponse cancelReservation(

        @WebParam(partName = "parameters", name = "cancelReservationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        CancelReservationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "RemoteStartTransaction")
    public Response<ocpp.cp._2015._10.RemoteStartTransactionResponse> remoteStartTransactionAsync(

        @WebParam(partName = "parameters", name = "remoteStartTransactionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        RemoteStartTransactionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "RemoteStartTransaction")
    public Future<?> remoteStartTransactionAsync(

        @WebParam(partName = "parameters", name = "remoteStartTransactionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        RemoteStartTransactionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.RemoteStartTransactionResponse> asyncHandler
    );

    @WebMethod(operationName = "RemoteStartTransaction", action = "/RemoteStartTransaction")
    @Action(input = "/RemoteStartTransaction", output = "/RemoteStartTransactionResponse")
    @WebResult(name = "remoteStartTransactionResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public RemoteStartTransactionResponse remoteStartTransaction(

        @WebParam(partName = "parameters", name = "remoteStartTransactionRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        RemoteStartTransactionRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "DataTransfer")
    public Response<ocpp.cp._2015._10.DataTransferResponse> dataTransferAsync(

        @WebParam(partName = "parameters", name = "dataTransferRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        DataTransferRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "DataTransfer")
    public Future<?> dataTransferAsync(

        @WebParam(partName = "parameters", name = "dataTransferRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        DataTransferRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.DataTransferResponse> asyncHandler
    );

    @WebMethod(operationName = "DataTransfer", action = "/DataTransfer")
    @Action(input = "/DataTransfer", output = "/DataTransferResponse")
    @WebResult(name = "dataTransferResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public DataTransferResponse dataTransfer(

        @WebParam(partName = "parameters", name = "dataTransferRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        DataTransferRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetConfiguration")
    public Response<ocpp.cp._2015._10.GetConfigurationResponse> getConfigurationAsync(

        @WebParam(partName = "parameters", name = "getConfigurationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetConfigurationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );

    @WebMethod(operationName = "GetConfiguration")
    public Future<?> getConfigurationAsync(

        @WebParam(partName = "parameters", name = "getConfigurationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetConfigurationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ocpp.cp._2015._10.GetConfigurationResponse> asyncHandler
    );

    @WebMethod(operationName = "GetConfiguration", action = "/GetConfiguration")
    @Action(input = "/GetConfiguration", output = "/GetConfigurationResponse")
    @WebResult(name = "getConfigurationResponse", targetNamespace = "urn://Ocpp/Cp/2015/10/", partName = "parameters")
    public GetConfigurationResponse getConfiguration(

        @WebParam(partName = "parameters", name = "getConfigurationRequest", targetNamespace = "urn://Ocpp/Cp/2015/10/")
        GetConfigurationRequest parameters,
        @WebParam(partName = "ChargeBoxIdentity", name = "chargeBoxIdentity", targetNamespace = "urn://Ocpp/Cp/2015/10/", header = true)
        java.lang.String chargeBoxIdentity
    );
}
